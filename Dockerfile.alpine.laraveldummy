FROM php:8.0.11-fpm-alpine
RUN apk --no-cache upgrade && \
    apk --no-cache add bash git sudo openssh  libxml2-dev oniguruma-dev autoconf gcc g++ make npm freetype-dev libjpeg-turbo-dev libpng-dev libzip-dev

RUN pecl channel-update pecl.php.net
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-install mbstring xml iconv pcntl gd zip sockets pdo  pdo_mysql bcmath soap
RUN docker-php-ext-enable mbstring xml gd iconv zip pcntl sockets bcmath pdo pdo_mysql soap

RUN docker-php-ext-install pdo pdo_mysql sockets

RUN apk --no-cache add pcre-dev $PHPIZE_DEPS \
  && pecl install redis \
  && docker-php-ext-enable redis \
  && apk del pcre-dev $PHPIZE_DEPS \
  && rm -rf /tmp/pear

RUN apk add --no-cache nano

RUN apk add --no-cache openjdk11

RUN curl -sS https://getcomposer.org/installerâ€‹ | php -- \
     --install-dir=/usr/local/bin --filename=composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

WORKDIR /app
COPY . .
RUN rm -rf /app/vendor
RUN rm -rf /app/node_modules
RUN rm -rf /app/composer.lock

RUN composer install
COPY .env .env

# RUN php artisan key:generate
# RUN php artisan migrate
# RUN php artisan cache:clear
# RUN php artisan config:clear

CMD php artisan serve --host="0.0.0.0" 

EXPOSE 8000
# docker build -t alpinelaraveldummy:latest -f Dockerfile.alpine.laraveldummy .
# docker run -p 8000:8000 --name alpinelaraveldummy alpinelaraveldummy:latest